    <section class="content-wrapper main-content clear-fix">
            <h3>How to connect to Activity Cloud:</h3>
            <hgroup>
            To connect to Activity Cloud, you need to install SignalR, which is broken up into a few package on NuGet:
            <ul>
                <li>SignalR - A meta package that brings in SignalR.Server and SignalR.Js</li>
                <li>SignalR.Server - Server side components needed to build SignalR endpoints</li>
                <li>SignalR.Js - Javascript client for SignalR</li>
                <li><b>SignalR.Client - .NET client for SignalR (you should install this)</b></li>
                <li>SignalR.Ninject - Ninject dependeny resolver for SignalR</li>
            </ul>
            Then the code is dead simple. First you connect to Activity Cloud, and then you start the connection. If connection is obtained you set up a handler for receiving data.
            Here shown in .NET:
            <p style="background: #fff; padding: 5px; width: 80%; margin: auto auto;">
                <code style="font-weight: bold;">
                    Connection connection = new Connection("@(Request.Url.Scheme + "://" + Request.Url.Host)/Api/Connect");<br />
                    Guid connectionId;
                    <br /><br />
                    connection.Start().ContinueWith(task => {<br />
                    &nbsp;&nbsp;if (task.IsFaulted) {<br />
                    &nbsp;&nbsp;&nbsp;&nbsp;Failed();<br />
                    &nbsp;&nbsp;} else {<br />
                    &nbsp;&nbsp;&nbsp;&nbsp;connectionId = connection.ConnectionId;<br />
                    &nbsp;&nbsp;&nbsp;&nbsp;connection.Received += data => {<br />
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HandleReceivedData(data);<br />
                    &nbsp;&nbsp;&nbsp;&nbsp;};<br />
                    &nbsp;&nbsp;}<br />
                    });
                </code>
            </p>
            It's as simple as that. We are now connected to Activity Cloud through a persistant connection, thus being able to receive events from Activity Cloud. Through the
            <code>HandleReceivedData</code> method, you can handle the events send from Activity Cloud. Read more about event handling @Html.ActionLink("here","Events").
            </hgroup>
            <hgroup>
            <h3>Authentication</h3>
            The ConnectionId is received when establishing the persistent connection is used in (almost) every API request. By passing the connectionId in the authorization header,
            the request will be recognized in each call. An authorization header will look like this:
            <p style="background: #fff; padding: 5px; width: 80%; margin: auto auto;">
                <code style="font-weight: bold;">
                    Authorization: ab83863a-47fe-4e7c-a927-ae5cec277799
                </code>
            </p>
            </hgroup>
            <hgroup>
                <p>
                    <h3>Read more about creating a client using SignalR</h3>
                    Read more about using SignalR with persistent connections <a href="https://github.com/SignalR/SignalR/wiki/SignalR-Client">here</a> or 
                    <a href="https://github.com/SignalR/SignalR/wiki/SignalR-JS-Client">here</a> for using it
                    with Javascript.
                </p>
            </hgroup>
      </section>